@page "/fetchdata"

<PageTitle>Employees</PageTitle>

@using BlazorApp.Data
@inject EmployeeService EmployeeService

@if (employees == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr style="background-color:cyan">
        <th>Name</th>
        <th>Vorname</th>
        <th>Abteilung</th>
        <th>Eintrittsdatum</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      @foreach (var employee in employees)
      {
        <tr>
          <td @onclick="(()=> SelectItems(employee))">@employee.FirstName</td>
          <td @onclick="(()=> SelectItems(employee))">@employee.LastName</td>
          <td @onclick="(()=> SelectItems(employee))">@employee.Department</td>
          <td @onclick="(()=> SelectItems(employee))">@employee.EntryDate.ToString("dd.MM.yyyy")</td>
          <td><button class="btn-close" type="button" @onclick="( async ()=> await Archive(employee))"></button></td>
        </tr>
      }
    </tbody>
  </table>
}

@code {

  public List<Employee> employees;

  [Parameter] public EventCallback<Employee> OnSelectEmployee { get; set; }

  protected override async Task OnInitializedAsync()
  {
    await GetEmployees();
  }

  public async Task GetEmployees()
  {
    employees = await EmployeeService.GetEmployees();
  }

  async void SelectItems(Employee employee)
  {
    await OnSelectEmployee.InvokeAsync(employee);
  }

  public async Task Archive(Employee employee)
  {
    await EmployeeService.ArchiveEmployee(employee);
    await GetEmployees();
    SelectItems(null);
  }
}
