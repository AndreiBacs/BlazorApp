@page "/form"
@using BlazorApp.Data

<EditForm Model="@employee" OnValidSubmit="@HandleValidSubmit">
  <DataAnnotationsValidator />
  <ValidationSummary />
  <div >
    <p>
      <label>
        Name:
        <InputText id="name" @bind-Value="employee.FirstName" />
      </label>
    </p>
    <p>
      <label>
        Vorname:
        <InputText id="lastName" @bind-Value="employee.LastName" />
      </label>
    </p>
    <p>
      <label>
        Eintrittsdatum:
        <InputDate id="entryDate" @bind-Value="employee.EntryDate" />
      </label>
    </p>
    <p>
      <label>
        Abteilung:
        <InputText id="department" @bind-Value="employee.Department" />
      </label>
    </p>
    <p>
      <label>
        Aufgaben:
        <InputText id="task" @bind-Value="task" />
      </label>
    </p>
    <p>
      <InputSelect @bind-Value="task">
         <option value=""></option>
        @foreach (var task in employee.Tasks)
        {
            <option value="@task">@task</option>
        }
      </InputSelect>
    </p>
  </div>

  <div style="justify-content: space-evenly; display: flex;">
    <button class="btn-danger" @onclick="onCancel">Abbrechen</button>
    <button class="btn-success" type="submit">Speichem</button>
  </div>

</EditForm>

@code {
    [Parameter] public Employee employee { get; set; }

    [Parameter] public List<string> Tasks { get; set; }

    [Parameter] public EventCallback<Employee> OnSaveEmployee { get; set; }

    [Parameter] public EventCallback onCancel { get; set; }

    string task;

    async void HandleValidSubmit()
    {
        await OnSaveEmployee.InvokeAsync(employee);
    }
}