@page "/register"
@inject IUserAccountService UserAccountService
@inject NavigationManager NavigationManager

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <MudGrid Class="d-flex justify-center">
        <MudItem md="5">
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h2">Register</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Username" HelperText="Max. 8 characters"
                                  @bind-Value="model.UserName" For="@(() => model.UserName)" />
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                    <MudTextField Label="Last Name" @bind-Value="model.LastName" For="@(() => model.LastName)" />
                    <MudTextField Label="First Name" @bind-Value="model.FirstName" For="@(() => model.FirstName)" />
                    <MudSelect @bind-Value="model.Role" Label="Select Role" Placeholder="Please Select">
                        @foreach (var item in Roles)
                        {
                            <MudSelectItem Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>

                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    User model = new User();
    public string[] Roles = { "Admin", "User" };

    void OnValidSubmit()
    {
        UserAccountService.AddOrUpdateUser(model);
        NavigationManager.NavigateTo("/login", true);
    }

}
